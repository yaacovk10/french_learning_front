import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';
import { RootState, AppThunk } from '../../app/store';
import { login } from './LoginAPI';

export interface loginState {
  username: string;
  password: string;
  status: 'idle' | 'loading' | 'failed';
  token: string;
  logged: boolean
}

const initialState: loginState = {
  username: "",
  password: "",
  status: 'idle',
  token: '',
  logged: false
};

export const loginAsync = createAsyncThunk(
  'login/login',
  async (credentials:{username: string, password:string}) => {
    const response = await login(credentials);
    // The value we return becomes the `fulfilled` action payload
    // console.log("login async response ", response.data)
    return response.data;
  }
);

export const loginSlice = createSlice({
  name: 'login',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    // Add logout reducer
    logout: (state) => {
      state.logged = false;
      state.token = '';
      localStorage.removeItem('token');
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(loginAsync.fulfilled, (state, action) => {
        state.token = action.payload.access;
        state.logged = true;
        localStorage.setItem('token', action.payload.access);
        state.status = 'loading';
      })
  },
});

export const { logout } = loginSlice.actions;

// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state: RootState) => state.login.value)`
export const selectstatus = (state: RootState) => state.login.status;
export const selectlogged = (state: RootState) => state.login.logged;
export const selectToken = (state: RootState) => state.login.token;
export const selectUsername = (state: RootState) => state.login.username;

export default loginSlice.reducer;

